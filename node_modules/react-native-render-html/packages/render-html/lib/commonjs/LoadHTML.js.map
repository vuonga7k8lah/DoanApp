{"version":3,"sources":["LoadHTML.tsx"],"names":["ERROR_STATE","error","loading","resolvedHTML","loadHTMLResource","uri","response","fetch","ok","html","text","useLoader","props","onHTMLLoaded","loadState","setState","cancelled","then","state","catch","call","styles","StyleSheet","create","alignCenter","flex","alignItems","justifyContent","errorText","fontStyle","fontSize","defaultRenderError","defaultRenderLoading","LoadHTML","remoteErrorView","remoteLoadingView","children","defaultProps"],"mappings":"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","sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\nimport { ActivityIndicator, StyleSheet, Text, View } from 'react-native';\nimport { RenderHTMLProps } from './shared-types';\n\ninterface HTMLLoaderProps extends RenderHTMLProps {\n  children: (resolvedHTML: string) => ReactElement;\n}\n\ninterface LoaderInternalState {\n  loading: boolean;\n  error: boolean;\n  resolvedHTML: string | null;\n}\n\nconst ERROR_STATE = {\n  error: true,\n  loading: false,\n  resolvedHTML: null\n};\n\nasync function loadHTMLResource(uri: string): Promise<LoaderInternalState> {\n  const response = await fetch(uri);\n  if (response.ok) {\n    const html = await response.text();\n    return {\n      resolvedHTML: html,\n      error: false,\n      loading: false\n    };\n  }\n  return ERROR_STATE;\n}\n\nfunction useLoader(props: HTMLLoaderProps) {\n  const { uri, html, onHTMLLoaded } = props;\n  const [loadState, setState] = useState<LoaderInternalState>({\n    error: false,\n    loading: false,\n    resolvedHTML: html || null\n  });\n  const { error } = loadState;\n  // Effect to reload on html changes\n  useEffect(() => {\n    typeof html === 'string' &&\n      typeof uri !== 'string' &&\n      setState({ error: false, loading: false, resolvedHTML: html });\n  }, [html, uri]);\n  // Effect to reload on uri changes\n  useEffect(() => {\n    let cancelled = false;\n    if (!error && uri) {\n      setState({ loading: true, error: false, resolvedHTML: null });\n      loadHTMLResource(uri)\n        .then((state) => {\n          !cancelled && setState(state);\n        })\n        .catch(() => {\n          !cancelled && setState(ERROR_STATE);\n        });\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [error, uri]);\n  useEffect(() => {\n    loadState.resolvedHTML && onHTMLLoaded?.call(null, loadState.resolvedHTML);\n  }, [loadState.resolvedHTML, onHTMLLoaded]);\n  return loadState;\n}\n\nconst styles = StyleSheet.create({\n  alignCenter: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  errorText: {\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n});\n\nfunction defaultRenderError(props: RenderHTMLProps) {\n  return (\n    <View style={styles.alignCenter}>\n      <Text style={styles.errorText}>Failed to load HTML from {props.uri}</Text>\n    </View>\n  );\n}\n\nfunction defaultRenderLoading() {\n  return (\n    <View style={styles.alignCenter}>\n      <ActivityIndicator />\n    </View>\n  );\n}\nexport default function LoadHTML(props: HTMLLoaderProps): ReactElement | null {\n  const { remoteErrorView, remoteLoadingView, children } = props;\n  const { resolvedHTML, error, loading } = useLoader(props);\n  if (error) {\n    return remoteErrorView!.call(null, props);\n  }\n  if (loading) {\n    return remoteLoadingView!.call(null, props);\n  }\n  return children?.call(null, resolvedHTML!) || null;\n}\n\nLoadHTML.defaultProps = {\n  remoteErrorView: defaultRenderError,\n  remoteLoadingView: defaultRenderLoading\n};\n"]}