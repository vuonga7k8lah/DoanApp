{"version":3,"sources":["TChildrenRenderer.tsx"],"names":["isCollapsible","tnode","TBlock","TPhrasing","getCollapsedMargins","precedent","current","precedentMarginBottom","styles","nativeBlockRet","marginBottom","currentMarginBottom","marginTop","Math","max","abs","TChildrenRenderer","tchildren","hasAnchorAncestor","disableMarginCollapsing","renderChild","collapsedMarginTop","elements","map","childTnode","i","childElement","React","createElement","TNodeRenderer","key","index"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAAqC;AACnC,SAAOA,KAAK,YAAYC,6BAAjB,IAA2BD,KAAK,YAAYE,gCAAnD;AACD;;AAED,SAASC,mBAAT,CAA6BC,SAA7B,EAA+CC,OAA/C,EAA8E;AAC5E,QAAMC,qBAAqB,GACzB,OAAOF,SAAS,CAACG,MAAV,CAAiBC,cAAjB,CAAgCC,YAAvC,KAAwD,QAAxD,GACIL,SAAS,CAACG,MAAV,CAAiBC,cAAjB,CAAgCC,YADpC,GAEI,IAHN;AAIA,QAAMC,mBAAmB,GACvB,OAAOL,OAAO,CAACE,MAAR,CAAeC,cAAf,CAA8BG,SAArC,KAAmD,QAAnD,GACIN,OAAO,CAACE,MAAR,CAAeC,cAAf,CAA8BG,SADlC,GAEI,IAHN;;AAIA,MAAIL,qBAAqB,IAAI,IAAzB,IAAiCI,mBAAmB,IAAI,IAA5D,EAAkE;AAChE,WAAO,IAAP;AACD;;AACD,SAAOE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASR,qBAAqB,GAAGI,mBAAjC,CAAT,EAAgE,CAAhE,CAAP;AACD;;AAeD,MAAMK,iBAAiB,GAAG,SAASA,iBAAT,CAA2B;AACnDC,EAAAA,SADmD;AAEnDC,EAAAA,iBAFmD;AAGnDC,EAAAA,uBAHmD;AAInDC,EAAAA;AAJmD,CAA3B,EAKC;AACzB,MAAIC,kBAAiC,GAAG,IAAxC;AACA,QAAMC,QAAQ,GAAGL,SAAS,CAACM,GAAV,CAAc,CAACC,UAAD,EAAaC,CAAb,KAAmB;AAChD,QACE,CAACN,uBAAD,IACAnB,aAAa,CAACwB,UAAD,CADb,IAEAC,CAAC,GAAG,CAFJ,IAGAzB,aAAa,CAACiB,SAAS,CAACQ,CAAC,GAAG,CAAL,CAAV,CAJf,EAKE;AACAJ,MAAAA,kBAAkB,GAAGjB,mBAAmB,CAACa,SAAS,CAACQ,CAAC,GAAG,CAAL,CAAV,EAAmBD,UAAnB,CAAxC;AACD;;AACD,UAAME,YAAY,gBAAGC,eAAMC,aAAN,CAAoBC,sBAApB,EAAmC;AACtDR,MAAAA,kBADsD;AAEtDH,MAAAA,iBAAiB,EAAEA,iBAFmC;AAGtDjB,MAAAA,KAAK,EAAEuB,UAH+C;AAItDM,MAAAA,GAAG,EAAEL;AAJiD,KAAnC,CAArB;;AAMA,WAAO,OAAOL,WAAP,KAAuB,UAAvB,GACHA,WAAW,CAAC;AAAEU,MAAAA,GAAG,EAAEL,CAAP;AAAUC,MAAAA,YAAV;AAAwBK,MAAAA,KAAK,EAAEN,CAA/B;AAAkCD,MAAAA;AAAlC,KAAD,CADR,GAEHE,YAFJ;AAGD,GAlBgB,CAAjB;AAmBA,sBAAO,4DAAGJ,QAAH,CAAP;AACD,CA3BD;;eA6BeN,iB","sourcesContent":["import React, { ReactElement, ReactNode } from 'react';\nimport { TBlock, TNode, TPhrasing } from '@native-html/transient-render-engine';\nimport TNodeRenderer, { TNodeRendererProps } from './TNodeRenderer';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode instanceof TBlock || tnode instanceof TPhrasing;\n}\n\nfunction getCollapsedMargins(precedent: TNode, current: TNode): null | number {\n  const precedentMarginBottom =\n    typeof precedent.styles.nativeBlockRet.marginBottom === 'number'\n      ? precedent.styles.nativeBlockRet.marginBottom\n      : null;\n  const currentMarginBottom =\n    typeof current.styles.nativeBlockRet.marginTop === 'number'\n      ? current.styles.nativeBlockRet.marginTop\n      : null;\n  if (precedentMarginBottom == null || currentMarginBottom == null) {\n    return null;\n  }\n  return Math.max(Math.abs(precedentMarginBottom - currentMarginBottom), 0);\n}\n\nexport interface TChildProps {\n  key: string | number;\n  childElement: ReactElement;\n  index: number;\n  childTnode: TNode;\n}\n\nexport type TChildrenRendererProps = {\n  disableMarginCollapsing?: boolean;\n  tchildren: TNode[];\n  renderChild?: (props: TChildProps) => ReactNode;\n} & Pick<TNodeRendererProps<TNode>, 'hasAnchorAncestor'>;\n\nconst TChildrenRenderer = function TChildrenRenderer({\n  tchildren,\n  hasAnchorAncestor,\n  disableMarginCollapsing,\n  renderChild\n}: TChildrenRendererProps) {\n  let collapsedMarginTop: number | null = null;\n  const elements = tchildren.map((childTnode, i) => {\n    if (\n      !disableMarginCollapsing &&\n      isCollapsible(childTnode) &&\n      i > 0 &&\n      isCollapsible(tchildren[i - 1])\n    ) {\n      collapsedMarginTop = getCollapsedMargins(tchildren[i - 1], childTnode);\n    }\n    const childElement = React.createElement(TNodeRenderer, {\n      collapsedMarginTop,\n      hasAnchorAncestor: hasAnchorAncestor,\n      tnode: childTnode,\n      key: i\n    });\n    return typeof renderChild === 'function'\n      ? renderChild({ key: i, childElement, index: i, childTnode })\n      : childElement;\n  });\n  return <>{elements}</>;\n};\n\nexport default TChildrenRenderer;\n"]}