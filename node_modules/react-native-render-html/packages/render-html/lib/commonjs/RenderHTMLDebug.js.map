{"version":3,"sources":["RenderHTMLDebug.tsx"],"names":["RenderHTMLProd","props","children","RenderHTMLDev","contentWidth","console","warn","RenderHTMLDebug","debug","__DEV__","React","createElement"],"mappings":";;;;;;;AAAA;;;;;;AAKA,SAASA,cAAT,CAAwBC,KAAxB,EAAmE;AACjE,sBAAO,6BAAC,eAAD,QAAWA,KAAK,CAACC,QAAjB,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBF,KAAvB,EAAkE;AAChE,wBAAU,MAAM;AACd,QAAI,OAAOA,KAAK,CAACG,YAAb,KAA8B,QAAlC,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,IAAR,CACE,kFACE,kDADF,GAEE,4EAFF,GAGE,0DAHF,GAIE,2DAJF,GAKE,kDANJ;AAQD;AACF,GAXD,EAWG,CAACL,KAAK,CAACG,YAAP,CAXH;AAYA,sBAAO,6BAAC,eAAD,QAAWH,KAAK,CAACC,QAAjB,CAAP;AACD;;AAEc,SAASK,eAAT,CACbN,KADa,EAEb;AACA,MAAIA,KAAK,CAACO,KAAN,IAAeC,OAAnB,EAA4B;AAC1B,wBAAOC,eAAMC,aAAN,CAAoBR,aAApB,EAAmCF,KAAnC,CAAP;AACD;;AACD,sBAAOS,eAAMC,aAAN,CAAoBX,cAApB,EAAoCC,KAApC,CAAP;AACD","sourcesContent":["import React, { Fragment } from 'react';\nimport { PropsWithChildren } from 'react';\nimport { useEffect } from 'react';\nimport { RenderHTMLProps } from './shared-types';\n\nfunction RenderHTMLProd(props: PropsWithChildren<RenderHTMLProps>) {\n  return <Fragment>{props.children}</Fragment>;\n}\n\nfunction RenderHTMLDev(props: PropsWithChildren<RenderHTMLProps>) {\n  useEffect(() => {\n    if (typeof props.contentWidth !== 'number') {\n      console.warn(\n        'You should always pass contentWidth prop to properly handle screen rotations ' +\n          'and have a seemless support for images scaling. ' +\n          'In the meantime, HTML will fallback to Dimensions.window().width, but its ' +\n          'layout will become inconsistent after screen rotations. ' +\n          'You are encouraged to use useWindowDimensions hook, see: ' +\n          'https://reactnative.dev/docs/usewindowdimensions'\n      );\n    }\n  }, [props.contentWidth]);\n  return <Fragment>{props.children}</Fragment>;\n}\n\nexport default function RenderHTMLDebug(\n  props: PropsWithChildren<RenderHTMLProps>\n) {\n  if (props.debug && __DEV__) {\n    return React.createElement(RenderHTMLDev, props);\n  }\n  return React.createElement(RenderHTMLProd, props);\n}\n"]}