{"version":3,"sources":["TBlockRenderer.tsx"],"names":["TDefaultBlockRenderer","tnode","children","overridingChildren","hasAnchorAncestor","style","onPress","viewProps","key","TNodeChildrenRenderer","commonProps","testID","tagName","undefined","React","createElement","GenericPressable","View","TBlockRenderer","collapsedMarginTop","Default","Custom","styles","nativeBlockFlow","nativeBlockRet","textProps","type","TDefaultRenderer","DefaultTagRenderer","Root"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAQA;;AACA;;AACA;;;;AAEO,MAAMA,qBAA+C,GAAG,CAAC;AAC9DC,EAAAA,KAD8D;AAE9DC,EAAAA,QAAQ,EAAEC,kBAFoD;AAG9DC,EAAAA,iBAH8D;AAI9DC,EAAAA,KAJ8D;AAK9DC,EAAAA,OAL8D;AAM9DC,EAAAA,SAN8D;AAO9DC,EAAAA;AAP8D,CAAD,KAQzD;AACJ,QAAMC,qBAAqB,GAAG,yDAA9B;AACA,QAAMP,QAAQ,GAAGC,kBAAH,aAAGA,kBAAH,cAAGA,kBAAH,gBACZ,6BAAC,qBAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,iBAAiB,EAAEG;AAFrB,IADF;AAMA,QAAMM,WAAW,GAAG,EAClB,GAAGH,SADe;AAElBF,IAAAA,KAAK,EAAE,CAAAE,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEF,KAAX,IAAmB,CAACE,SAAS,CAACF,KAAX,EAAkBA,KAAlB,CAAnB,GAA8CA,KAFnC;AAGlBG,IAAAA,GAHkB;AAIlBG,IAAAA,MAAM,EAAEV,KAAK,CAACW,OAAN,IAAiBC;AAJP,GAApB;;AAMA,MAAI,OAAOP,OAAP,KAAmB,UAAvB,EAAmC;AACjC,wBAAOQ,eAAMC,aAAN,CACLC,yBADK,EAEL;AAAEV,MAAAA,OAAF;AAAW,SAAGI;AAAd,KAFK,EAGLR,QAHK,CAAP;AAKD;;AACD,sBAAOY,eAAMC,aAAN,CAAoBE,iBAApB,EAA0BP,WAA1B,EAAuCR,QAAvC,CAAP;AACD,CA9BM;;;;AAgCP,MAAMgB,cAAc,GAAG,CAAC;AACtBjB,EAAAA,KADsB;AAEtBO,EAAAA,GAFsB;AAGtBJ,EAAAA,iBAHsB;AAItBe,EAAAA;AAJsB,CAAD,KAKkB;AAAA;;AACvC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsB,+CAAkBpB,KAAlB,CAA5B;AACA,QAAMS,WAA2C,GAAG;AAClDF,IAAAA,GADkD;AAElDP,IAAAA,KAFkD;AAGlDI,IAAAA,KAAK,EAAE,oCAAsBc,kBAAtB,EAA0C,EAC/C,GAAGlB,KAAK,CAACqB,MAAN,CAAaC,eAD+B;AAE/C,SAAGtB,KAAK,CAACqB,MAAN,CAAaE;AAF+B,KAA1C,CAH2C;AAOlDC,IAAAA,SAAS,EAAE,EAPuC;AAQlDlB,IAAAA,SAAS,EAAE,EARuC;AASlDmB,IAAAA,IAAI,EAAE,MAT4C;AAUlDtB,IAAAA,iBAVkD;AAWlDuB,IAAAA,gBAAgB,EAAE3B,qBAXgC;AAYlD4B,IAAAA,kBAAkB,EAChBR,OAAO,IAAKpB;AAboC,GAApD;AAeA,QAAM6B,IAAI,WAAIR,MAAJ,aAAIA,MAAJ,cAAIA,MAAJ,GACRD,OADQ,uCAERpB,qBAFF;AAGA,sBAAOc,eAAMC,aAAN,CAAoBc,IAApB,EAA0BnB,WAA1B,CAAP;AACD,CA1BD;;eA4BeQ,c","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { TBlock } from '@native-html/transient-render-engine';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport {\n  CustomTagRenderer,\n  CustomTagRendererProps,\n  DefaultTagRenderer,\n  TDefaultRenderer,\n  TNodeGenericRendererProps\n} from './shared-types';\nimport mergeCollapsedMargins from './helpers/mergeCollapsedMargins';\nimport GenericPressable from './GenericPressable';\nimport { useRendererConfig } from './context/RenderRegistryProvider';\n\nexport const TDefaultBlockRenderer: TDefaultRenderer<TBlock> = ({\n  tnode,\n  children: overridingChildren,\n  hasAnchorAncestor,\n  style,\n  onPress,\n  viewProps,\n  key\n}) => {\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const children = overridingChildren ?? (\n    <TNodeChildrenRenderer\n      tnode={tnode}\n      hasAnchorAncestor={hasAnchorAncestor}\n    />\n  );\n  const commonProps = {\n    ...viewProps,\n    style: viewProps?.style ? [viewProps.style, style] : style,\n    key,\n    testID: tnode.tagName || undefined\n  };\n  if (typeof onPress === 'function') {\n    return React.createElement(\n      GenericPressable,\n      { onPress, ...commonProps },\n      children\n    );\n  }\n  return React.createElement(View, commonProps, children);\n};\n\nconst TBlockRenderer = ({\n  tnode,\n  key,\n  hasAnchorAncestor,\n  collapsedMarginTop\n}: TNodeGenericRendererProps<TBlock>) => {\n  const { Default, Custom } = useRendererConfig(tnode);\n  const commonProps: CustomTagRendererProps<TBlock> = {\n    key,\n    tnode,\n    style: mergeCollapsedMargins(collapsedMarginTop, {\n      ...tnode.styles.nativeBlockFlow,\n      ...tnode.styles.nativeBlockRet\n    }),\n    textProps: {},\n    viewProps: {},\n    type: 'text',\n    hasAnchorAncestor,\n    TDefaultRenderer: TDefaultBlockRenderer,\n    DefaultTagRenderer:\n      Default || (TDefaultBlockRenderer as DefaultTagRenderer<TBlock>)\n  };\n  const Root = (Custom ??\n    Default ??\n    TDefaultBlockRenderer) as CustomTagRenderer<TBlock>;\n  return React.createElement(Root, commonProps);\n};\n\nexport default TBlockRenderer;\n"]}