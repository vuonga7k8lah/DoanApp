"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _transientRenderEngine = require("@native-html/transient-render-engine");

var _TNodeRenderer = _interopRequireDefault(require("./TNodeRenderer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isCollapsible(tnode) {
  return tnode instanceof _transientRenderEngine.TBlock || tnode instanceof _transientRenderEngine.TPhrasing;
}

function getCollapsedMargins(precedent, current) {
  const precedentMarginBottom = typeof precedent.styles.nativeBlockRet.marginBottom === 'number' ? precedent.styles.nativeBlockRet.marginBottom : null;
  const currentMarginBottom = typeof current.styles.nativeBlockRet.marginTop === 'number' ? current.styles.nativeBlockRet.marginTop : null;

  if (precedentMarginBottom == null || currentMarginBottom == null) {
    return null;
  }

  return Math.max(Math.abs(precedentMarginBottom - currentMarginBottom), 0);
}

const TChildrenRenderer = function TChildrenRenderer({
  tchildren,
  hasAnchorAncestor,
  disableMarginCollapsing,
  renderChild
}) {
  let collapsedMarginTop = null;
  const elements = tchildren.map((childTnode, i) => {
    if (!disableMarginCollapsing && isCollapsible(childTnode) && i > 0 && isCollapsible(tchildren[i - 1])) {
      collapsedMarginTop = getCollapsedMargins(tchildren[i - 1], childTnode);
    }

    const childElement = /*#__PURE__*/_react.default.createElement(_TNodeRenderer.default, {
      collapsedMarginTop,
      hasAnchorAncestor: hasAnchorAncestor,
      tnode: childTnode,
      key: i
    });

    return typeof renderChild === 'function' ? renderChild({
      key: i,
      childElement,
      index: i,
      childTnode
    }) : childElement;
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, elements);
};

var _default = TChildrenRenderer;
exports.default = _default;
//# sourceMappingURL=TChildrenRenderer.js.map