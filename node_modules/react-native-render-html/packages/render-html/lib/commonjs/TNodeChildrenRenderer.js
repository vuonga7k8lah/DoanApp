"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTNodeChildrenProps = useTNodeChildrenProps;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _transientRenderEngine = require("@native-html/transient-render-engine");

var _SharedPropsContext = require("./context/SharedPropsContext");

var _TChildrenRenderer = _interopRequireDefault(require("./TChildrenRenderer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isCollapsible(tnode) {
  return tnode instanceof _transientRenderEngine.TBlock || tnode instanceof _transientRenderEngine.TPhrasing;
}

function useTNodeChildrenProps({
  tnode,
  hasAnchorAncestor,
  disableMarginCollapsing = false,
  renderChild
}) {
  const {
    enableExperimentalMarginCollapsing
  } = (0, _SharedPropsContext.useSharedProps)();
  const shouldCollapseChildren = enableExperimentalMarginCollapsing && !disableMarginCollapsing && isCollapsible(tnode);
  return {
    hasAnchorAncestor: hasAnchorAncestor || tnode.tagName === 'a',
    disableMarginCollapsing: !shouldCollapseChildren,
    tchildren: tnode.children,
    renderChild
  };
}

const TNodeWithChildrenRenderer = function TNodeChildrenRenderer(props) {
  return /*#__PURE__*/_react.default.createElement(_TChildrenRenderer.default, useTNodeChildrenProps(props));
};

const TNodeChildrenRenderer = function TNodeChildrenRenderer(props) {
  if (props.tnode instanceof _transientRenderEngine.TText) {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, props.tnode.data);
  }

  return /*#__PURE__*/_react.default.createElement(TNodeWithChildrenRenderer, props);
};

var _default = TNodeChildrenRenderer;
exports.default = _default;
//# sourceMappingURL=TNodeChildrenRenderer.js.map