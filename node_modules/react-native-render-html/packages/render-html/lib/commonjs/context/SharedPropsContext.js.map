{"version":3,"sources":["SharedPropsContext.ts"],"names":["defaultSharedPropsContext","debug","contentWidth","Dimensions","get","width","staticContentMaxWidth","enableExperimentalPercentWidth","textSelectable","allowFontScaling","enableExperimentalMarginCollapsing","computeImagesMaxWidth","imagesInitialDimensions","height","listsPrefixesRenderers","onLinkPress","_e","href","Linking","canOpenURL","openURL","SharedPropsContext","React","createContext","useSharedProps","useContext","useSharedTextProps","selectable"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAGO,MAAMA,yBAA0D,GAAG;AACxEC,EAAAA,KAAK,EAAE,KADiE;AAExEC,EAAAA,YAAY,EAAEC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAFiC;AAGxEC,EAAAA,qBAAqB,EAAEH,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAHwB;AAIxEE,EAAAA,8BAA8B,EAAE,KAJwC;AAKxEC,EAAAA,cAAc,EAAE,KALwD;AAMxEC,EAAAA,gBAAgB,EAAE,IANsD;AAOxEC,EAAAA,kCAAkC,EAAE,KAPoC;AAQxEC,EAAAA,qBAAqB,EAAGT,YAAD,IAAkBA,YAR+B;AASxEU,EAAAA,uBAAuB,EAAE;AACvBC,IAAAA,MAAM,EAAE,EADe;AAEvBR,IAAAA,KAAK,EAAE;AAFgB,GAT+C;AAaxES,EAAAA,sBAAsB,EAAE,EAbgD;AAcxEC,EAAAA,WAAW,EAAE,CAACC,EAAD,EAAKC,IAAL,KAAcC,qBAAQC,UAAR,CAAmBF,IAAnB,KAA4BC,qBAAQE,OAAR,CAAgBH,IAAhB;AAdiB,CAAnE;;;AAiBP,MAAMI,kBAAkB,gBAAGC,eAAMC,aAAN,CACzBvB,yBADyB,CAA3B;;AAIO,SAASwB,cAAT,GAA0B;AAC/B,SAAOF,eAAMG,UAAN,CAAiBJ,kBAAjB,CAAP;AACD;;AAEM,SAASK,kBAAT,GAAyC;AAC9C,QAAM;AAAElB,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAuCe,cAAc,EAA3D;AACA,SAAO;AACLG,IAAAA,UAAU,EAAEnB,cADP;AAELC,IAAAA;AAFK,GAAP;AAID;;eAEcY,kB","sourcesContent":["import React from 'react';\nimport { Dimensions, Linking, TextProps } from 'react-native';\nimport { RenderHTMLPassedProps } from '../shared-types';\n\nexport const defaultSharedPropsContext: Required<RenderHTMLPassedProps> = {\n  debug: false,\n  contentWidth: Dimensions.get('window').width,\n  staticContentMaxWidth: Dimensions.get('window').width,\n  enableExperimentalPercentWidth: false,\n  textSelectable: false,\n  allowFontScaling: true,\n  enableExperimentalMarginCollapsing: false,\n  computeImagesMaxWidth: (contentWidth) => contentWidth,\n  imagesInitialDimensions: {\n    height: 50,\n    width: 50\n  },\n  listsPrefixesRenderers: {},\n  onLinkPress: (_e, href) => Linking.canOpenURL(href) && Linking.openURL(href)\n};\n\nconst SharedPropsContext = React.createContext<RenderHTMLPassedProps>(\n  defaultSharedPropsContext\n);\n\nexport function useSharedProps() {\n  return React.useContext(SharedPropsContext);\n}\n\nexport function useSharedTextProps(): TextProps {\n  const { textSelectable, allowFontScaling } = useSharedProps();\n  return {\n    selectable: textSelectable,\n    allowFontScaling\n  };\n}\n\nexport default SharedPropsContext;\n"]}