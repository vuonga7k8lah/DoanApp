"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSharedProps = useSharedProps;
exports.useSharedTextProps = useSharedTextProps;
exports.default = exports.defaultSharedPropsContext = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const defaultSharedPropsContext = {
  debug: false,
  contentWidth: _reactNative.Dimensions.get('window').width,
  staticContentMaxWidth: _reactNative.Dimensions.get('window').width,
  enableExperimentalPercentWidth: false,
  textSelectable: false,
  allowFontScaling: true,
  enableExperimentalMarginCollapsing: false,
  computeImagesMaxWidth: contentWidth => contentWidth,
  imagesInitialDimensions: {
    height: 50,
    width: 50
  },
  listsPrefixesRenderers: {},
  onLinkPress: (_e, href) => _reactNative.Linking.canOpenURL(href) && _reactNative.Linking.openURL(href)
};
exports.defaultSharedPropsContext = defaultSharedPropsContext;

const SharedPropsContext = /*#__PURE__*/_react.default.createContext(defaultSharedPropsContext);

function useSharedProps() {
  return _react.default.useContext(SharedPropsContext);
}

function useSharedTextProps() {
  const {
    textSelectable,
    allowFontScaling
  } = useSharedProps();
  return {
    selectable: textSelectable,
    allowFontScaling
  };
}

var _default = SharedPropsContext;
exports.default = _default;
//# sourceMappingURL=SharedPropsContext.js.map