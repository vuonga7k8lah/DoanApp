{"version":3,"sources":["TNodeChildrenRenderer.tsx"],"names":["isCollapsible","tnode","TBlock","TPhrasing","useTNodeChildrenProps","hasAnchorAncestor","disableMarginCollapsing","renderChild","enableExperimentalMarginCollapsing","shouldCollapseChildren","tagName","tchildren","children","TNodeWithChildrenRenderer","TNodeChildrenRenderer","props","React","createElement","TChildrenRenderer","TText","data"],"mappings":";;;;;;;;AAAA;;AACA;;AAMA;;AAEA;;;;AAKA,SAASA,aAAT,CAAuBC,KAAvB,EAAqC;AACnC,SAAOA,KAAK,YAAYC,6BAAjB,IAA2BD,KAAK,YAAYE,gCAAnD;AACD;;AAOM,SAASC,qBAAT,CAA+B;AACpCH,EAAAA,KADoC;AAEpCI,EAAAA,iBAFoC;AAGpCC,EAAAA,uBAAuB,GAAG,KAHU;AAIpCC,EAAAA;AAJoC,CAA/B,EAKgD;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAyC,yCAA/C;AACA,QAAMC,sBAAsB,GAC1BD,kCAAkC,IAClC,CAACF,uBADD,IAEAN,aAAa,CAACC,KAAD,CAHf;AAIA,SAAO;AACLI,IAAAA,iBAAiB,EAAEA,iBAAiB,IAAIJ,KAAK,CAACS,OAAN,KAAkB,GADrD;AAELJ,IAAAA,uBAAuB,EAAE,CAACG,sBAFrB;AAGLE,IAAAA,SAAS,EAAEV,KAAK,CAACW,QAHZ;AAILL,IAAAA;AAJK,GAAP;AAMD;;AAED,MAAMM,yBAA8E,GAAG,SAASC,qBAAT,CACrFC,KADqF,EAErF;AACA,sBAAOC,eAAMC,aAAN,CAAoBC,0BAApB,EAAuCd,qBAAqB,CAACW,KAAD,CAA5D,CAAP;AACD,CAJD;;AAMA,MAAMD,qBAA0E,GAAG,SAASA,qBAAT,CACjFC,KADiF,EAEjF;AACA,MAAIA,KAAK,CAACd,KAAN,YAAuBkB,4BAA3B,EAAkC;AAChC,wBAAO,4DAAGJ,KAAK,CAACd,KAAN,CAAYmB,IAAf,CAAP;AACD;;AACD,sBAAOJ,eAAMC,aAAN,CAAoBJ,yBAApB,EAA+CE,KAA/C,CAAP;AACD,CAPD;;eASeD,qB","sourcesContent":["import React, { ReactNode } from 'react';\nimport {\n  TBlock,\n  TNode,\n  TPhrasing,\n  TText\n} from '@native-html/transient-render-engine';\nimport { useSharedProps } from './context/SharedPropsContext';\nimport { TNodeRendererProps } from './TNodeRenderer';\nimport TChildrenRenderer, {\n  TChildProps,\n  TChildrenRendererProps\n} from './TChildrenRenderer';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode instanceof TBlock || tnode instanceof TPhrasing;\n}\n\nexport type TNodeChildrenRendererProps = {\n  disableMarginCollapsing?: boolean;\n  renderChild?: (props: TChildProps) => ReactNode;\n} & Pick<TNodeRendererProps<TNode>, 'hasAnchorAncestor' | 'tnode'>;\n\nexport function useTNodeChildrenProps({\n  tnode,\n  hasAnchorAncestor,\n  disableMarginCollapsing = false,\n  renderChild\n}: TNodeChildrenRendererProps): TChildrenRendererProps {\n  const { enableExperimentalMarginCollapsing } = useSharedProps();\n  const shouldCollapseChildren =\n    enableExperimentalMarginCollapsing &&\n    !disableMarginCollapsing &&\n    isCollapsible(tnode);\n  return {\n    hasAnchorAncestor: hasAnchorAncestor || tnode.tagName === 'a',\n    disableMarginCollapsing: !shouldCollapseChildren,\n    tchildren: tnode.children,\n    renderChild\n  };\n}\n\nconst TNodeWithChildrenRenderer: React.FunctionComponent<TNodeChildrenRendererProps> = function TNodeChildrenRenderer(\n  props\n) {\n  return React.createElement(TChildrenRenderer, useTNodeChildrenProps(props));\n};\n\nconst TNodeChildrenRenderer: React.FunctionComponent<TNodeChildrenRendererProps> = function TNodeChildrenRenderer(\n  props\n) {\n  if (props.tnode instanceof TText) {\n    return <>{props.tnode.data}</>;\n  }\n  return React.createElement(TNodeWithChildrenRenderer, props);\n};\n\nexport default TNodeChildrenRenderer;\n"]}