"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _HTMLImageElement = _interopRequireDefault(require("../elements/HTMLImageElement"));

var _SharedPropsContext = require("../context/SharedPropsContext");

var _transientRenderEngine = require("@native-html/transient-render-engine");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function normalizeUri(uri) {
  return uri.startsWith('//') ? "https:".concat(uri) : uri;
}

const ImageRenderer = props => {
  const {
    style,
    tnode,
    TDefaultRenderer,
    onPress
  } = props;
  const {
    contentWidth,
    computeImagesMaxWidth,
    enableExperimentalPercentWidth,
    imagesInitialDimensions
  } = (0, _SharedPropsContext.useSharedProps)();
  const src = tnode.attributes.src;

  if (!src) {
    return /*#__PURE__*/_react.default.createElement(TDefaultRenderer, props);
  }

  return /*#__PURE__*/_react.default.createElement(_HTMLImageElement.default, {
    alt: tnode.attributes.alt,
    testID: "img",
    altColor: tnode.styles.nativeTextFlow.color,
    contentWidth: contentWidth,
    computeImagesMaxWidth: computeImagesMaxWidth,
    enableExperimentalPercentWidth: enableExperimentalPercentWidth,
    imagesInitialDimensions: imagesInitialDimensions,
    onPress: onPress,
    source: {
      uri: normalizeUri(src)
    },
    style: style,
    width: tnode.attributes.width,
    height: tnode.attributes.height
  });
};

ImageRenderer.model = _transientRenderEngine.defaultHTMLElementModels.img;
var _default = ImageRenderer;
exports.default = _default;
//# sourceMappingURL=ImageRenderer.js.map