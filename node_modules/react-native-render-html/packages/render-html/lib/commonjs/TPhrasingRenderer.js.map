{"version":3,"sources":["TPhrasingRenderer.tsx"],"names":["TDefaultPhrasingRenderer","tnode","key","style","children","overridingChildren","hasAnchorAncestor","textProps","TNodeChildrenRenderer","resolvedStyles","React","createElement","Text","testID","tagName","undefined","TPhrasingRenderer","collapsedMarginTop","Default","Custom","styles","nativeBlockFlow","nativeBlockRet","nativeTextFlow","nativeTextRet","commonProps","viewProps","type","TDefaultRenderer","DefaultTagRenderer","Root"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAQA;;AACA;;;;AAEO,MAAMA,wBAAqD,GAAG,CAAC;AACpEC,EAAAA,KADoE;AAEpEC,EAAAA,GAFoE;AAGpEC,EAAAA,KAHoE;AAIpEC,EAAAA,QAAQ,EAAEC,kBAJ0D;AAKpEC,EAAAA,iBALoE;AAMpEC,EAAAA;AANoE,CAAD,KAO/D;AACJ,QAAMC,qBAAqB,GAAG,yDAA9B;AACA,QAAMC,cAAc,GAAG,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEJ,KAAX,IAAmB,CAACI,SAAS,CAACJ,KAAX,EAAkBA,KAAlB,CAAnB,GAA8CA,KAArE;AACA,QAAMC,QAAQ,GAAGC,kBAAH,aAAGA,kBAAH,cAAGA,kBAAH,gBACZ,6BAAC,qBAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,iBAAiB,EAAEK;AAFrB,IADF;AAMA,sBAAOI,eAAMC,aAAN,CACLC,iBADK,EAEL;AACEV,IAAAA,GADF;AAEE,OAAGK,SAFL;AAGEJ,IAAAA,KAAK,EAAEM,cAHT;AAIEI,IAAAA,MAAM,EAAEZ,KAAK,CAACa,OAAN,IAAiBC;AAJ3B,GAFK,EAQLX,QARK,CAAP;AAUD,CA1BM;;;;AA4BP,MAAMY,iBAAiB,GAAG,CAAC;AACzBf,EAAAA,KADyB;AAEzBC,EAAAA,GAFyB;AAGzBI,EAAAA,iBAHyB;AAIzBW,EAAAA;AAJyB,CAAD,KAKkB;AAAA;;AAC1C,QAAMV,SAAS,GAAG,6CAAlB;AACA,QAAM;AAAEW,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsB,+CAAkBlB,KAAlB,CAA5B;AACA,QAAME,KAAK,GAAG,oCAAsBc,kBAAtB,EAA0C,EACtD,GAAGhB,KAAK,CAACmB,MAAN,CAAaC,eADsC;AAEtD,OAAGpB,KAAK,CAACmB,MAAN,CAAaE,cAFsC;AAGtD,OAAGrB,KAAK,CAACmB,MAAN,CAAaG,cAHsC;AAItD,OAAGtB,KAAK,CAACmB,MAAN,CAAaI;AAJsC,GAA1C,CAAd;AAMA,QAAMC,WAA8C,GAAG;AACrDvB,IAAAA,GADqD;AAErDD,IAAAA,KAFqD;AAGrDE,IAAAA,KAHqD;AAIrDG,IAAAA,iBAJqD;AAKrDC,IAAAA,SALqD;AAMrDmB,IAAAA,SAAS,EAAE,EAN0C;AAOrDC,IAAAA,IAAI,EAAE,MAP+C;AAQrDC,IAAAA,gBAAgB,EAAE5B,wBARmC;AASrD6B,IAAAA,kBAAkB,EAChBX,OAAO,IAAKlB;AAVuC,GAAvD;AAYA,QAAM8B,IAAI,WAAIX,MAAJ,aAAIA,MAAJ,cAAIA,MAAJ,GACRD,OADQ,uCAERlB,wBAFF;AAGA,sBAAOU,eAAMC,aAAN,CAAoBmB,IAApB,EAA0BL,WAA1B,CAAP;AACD,CA9BD;;eAgCeT,iB","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport { TPhrasing } from '@native-html/transient-render-engine';\nimport { useSharedTextProps } from './context/SharedPropsContext';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport {\n  CustomTagRenderer,\n  CustomTagRendererProps,\n  DefaultTagRenderer,\n  TDefaultRenderer,\n  TNodeGenericRendererProps\n} from './shared-types';\nimport mergeCollapsedMargins from './helpers/mergeCollapsedMargins';\nimport { useRendererConfig } from './context/RenderRegistryProvider';\n\nexport const TDefaultPhrasingRenderer: TDefaultRenderer<TPhrasing> = ({\n  tnode,\n  key,\n  style,\n  children: overridingChildren,\n  hasAnchorAncestor,\n  textProps\n}) => {\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const resolvedStyles = textProps?.style ? [textProps.style, style] : style;\n  const children = overridingChildren ?? (\n    <TNodeChildrenRenderer\n      tnode={tnode}\n      hasAnchorAncestor={hasAnchorAncestor}\n    />\n  );\n  return React.createElement(\n    Text,\n    {\n      key,\n      ...textProps,\n      style: resolvedStyles,\n      testID: tnode.tagName || undefined\n    },\n    children\n  );\n};\n\nconst TPhrasingRenderer = ({\n  tnode,\n  key,\n  hasAnchorAncestor,\n  collapsedMarginTop\n}: TNodeGenericRendererProps<TPhrasing>) => {\n  const textProps = useSharedTextProps();\n  const { Default, Custom } = useRendererConfig(tnode);\n  const style = mergeCollapsedMargins(collapsedMarginTop, {\n    ...tnode.styles.nativeBlockFlow,\n    ...tnode.styles.nativeBlockRet,\n    ...tnode.styles.nativeTextFlow,\n    ...tnode.styles.nativeTextRet\n  });\n  const commonProps: CustomTagRendererProps<TPhrasing> = {\n    key,\n    tnode,\n    style,\n    hasAnchorAncestor,\n    textProps,\n    viewProps: {},\n    type: 'text',\n    TDefaultRenderer: TDefaultPhrasingRenderer,\n    DefaultTagRenderer:\n      Default || (TDefaultPhrasingRenderer as DefaultTagRenderer<TPhrasing>)\n  };\n  const Root = (Custom ??\n    Default ??\n    TDefaultPhrasingRenderer) as CustomTagRenderer<TPhrasing>;\n  return React.createElement(Root, commonProps);\n};\n\nexport default TPhrasingRenderer;\n"]}