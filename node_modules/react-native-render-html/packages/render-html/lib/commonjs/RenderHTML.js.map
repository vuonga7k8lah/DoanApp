{"version":3,"sources":["RenderHTML.tsx"],"names":["propTypes","renderers","PropTypes","object","isRequired","enableCSSInlineProcessing","bool","enableUserAgentStyles","enableExperimentalMarginCollapsing","idsStyles","remoteErrorView","func","remoteLoadingView","ignoredTags","array","ignoredStyles","allowedStyles","decodeEntities","debug","listsPrefixesRenderers","alterData","alterChildren","alterNode","ignoreNode","html","string","uri","tagsStyles","classesStyles","containerStyle","oneOfType","customWrapper","onLinkPress","computeImagesMaxWidth","staticContentMaxWidth","number","contentWidth","enableExperimentalPercentWidth","imagesInitialDimensions","shape","width","height","emSize","ptSize","baseStyle","textSelectable","renderersProps","allowFontScaling","onTTreeChange","onHTMLLoaded","systemFonts","arrayOf","fallbackFonts","serif","monospace","triggerTREInvalidationPropNames","defaultProps","defaultSharedPropsContext","fontSize","Platform","select","ios","default","android","__DEV__","RenderResolvedHTML","props","ttree","RenderHTML","TChildrenRenderer","TNodeChildrenRenderer","resolvedHTML"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform } from 'react-native';\nimport { RenderHTMLProps } from './shared-types';\nimport TNodeRenderer from './TNodeRenderer';\nimport useTTree from './hooks/useTTree';\nimport SharedPropsContext, {\n  defaultSharedPropsContext\n} from './context/SharedPropsContext';\nimport TChildrenRenderersContext from './context/TChildrenRendererContext';\nimport TNodeChildrenRenderer from './TNodeChildrenRenderer';\nimport RenderHTMLDebug from './RenderHTMLDebug';\nimport LoadHTML from './LoadHTML';\nimport RenderRegistryProvider from './context/RenderRegistryProvider';\nimport TChildrenRenderer from './TChildrenRenderer';\n\nexport type RenderHTMLPropTypes = Record<keyof RenderHTMLProps, any>;\n\nconst propTypes: RenderHTMLPropTypes = {\n  renderers: PropTypes.object.isRequired,\n  enableCSSInlineProcessing: PropTypes.bool,\n  enableUserAgentStyles: PropTypes.bool,\n  enableExperimentalMarginCollapsing: PropTypes.bool,\n  idsStyles: PropTypes.object,\n  remoteErrorView: PropTypes.func,\n  remoteLoadingView: PropTypes.func,\n  ignoredTags: PropTypes.array.isRequired,\n  ignoredStyles: PropTypes.array.isRequired,\n  allowedStyles: PropTypes.array,\n  decodeEntities: PropTypes.bool.isRequired,\n  debug: PropTypes.bool.isRequired,\n  listsPrefixesRenderers: PropTypes.object,\n  alterData: PropTypes.func,\n  alterChildren: PropTypes.func,\n  alterNode: PropTypes.func,\n  ignoreNode: PropTypes.func,\n  html: PropTypes.string,\n  uri: PropTypes.string,\n  tagsStyles: PropTypes.object,\n  classesStyles: PropTypes.object,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  customWrapper: PropTypes.func,\n  onLinkPress: PropTypes.func,\n  computeImagesMaxWidth: PropTypes.func,\n  staticContentMaxWidth: PropTypes.number,\n  contentWidth: PropTypes.number,\n  enableExperimentalPercentWidth: PropTypes.bool,\n  imagesInitialDimensions: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  }),\n  emSize: PropTypes.number.isRequired,\n  ptSize: PropTypes.number.isRequired,\n  baseStyle: PropTypes.object,\n  textSelectable: PropTypes.bool,\n  renderersProps: PropTypes.object,\n  allowFontScaling: PropTypes.bool,\n  onTTreeChange: PropTypes.func,\n  onHTMLLoaded: PropTypes.func,\n  systemFonts: PropTypes.arrayOf(PropTypes.string),\n  fallbackFonts: PropTypes.shape({\n    serif: PropTypes.string,\n    'sans-serif': PropTypes.string,\n    monospace: PropTypes.string\n  }),\n  triggerTREInvalidationPropNames: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst defaultProps: {\n  [k in keyof RenderHTMLProps]?: RenderHTMLProps[k];\n} = {\n  ...defaultSharedPropsContext,\n  decodeEntities: true,\n  emSize: 14,\n  ptSize: 1.3,\n  ignoredTags: [],\n  ignoredStyles: [],\n  baseStyle: { fontSize: 14 },\n  tagsStyles: {},\n  classesStyles: {},\n  enableUserAgentStyles: true,\n  enableCSSInlineProcessing: true,\n  renderers: {},\n  fallbackFonts: {\n    'sans-serif': Platform.select({ ios: 'system', default: 'sans-serif' }),\n    monospace: Platform.select({ ios: 'Menlo', default: 'monospace' }),\n    serif: Platform.select({ ios: 'Times New Roman', default: 'serif' })\n  },\n  systemFonts: Platform.select({\n    default: [],\n    ios: [\n      'San Francisco',\n      'Arial',\n      'ArialHebrew',\n      'Avenir',\n      'Baskerville',\n      'Bodoni 72',\n      'Bradley Hand',\n      'Chalkboard SE',\n      'Cochin',\n      'Copperplate',\n      'Courier',\n      'Courier New',\n      'Damascus',\n      'Didot',\n      'Futura',\n      'Geeza Pro',\n      'Georgia',\n      'Gill Sans',\n      'Helvetica',\n      'Helvetica Neue',\n      'Hiragino Sans',\n      'Hoefler Text',\n      'Iowan Old Style',\n      'Kailasa',\n      'Khmer Sangam MN',\n      'Marker Felt',\n      'Menlo',\n      'Mishafi',\n      'Noteworthy',\n      'Optima',\n      'Palatino',\n      'Papyrus',\n      'Savoye LET',\n      'Symbol',\n      'Thonburi',\n      'Times New Roman',\n      'Trebuchet MS',\n      'Verdana',\n      'Zapf Dingbats',\n      'Zapfino'\n    ],\n    android: [\n      'Roboto',\n      'notoserif',\n      'sans-serif-light',\n      'sans-serif-thin',\n      'sans-serif-medium'\n    ]\n  }),\n  triggerTREInvalidationPropNames: [],\n  debug: __DEV__\n};\n\nfunction RenderResolvedHTML(props: RenderHTMLProps) {\n  const ttree = useTTree(props);\n  return (\n    <TNodeRenderer\n      hasAnchorAncestor={false}\n      tnode={ttree}\n      collapsedMarginTop={null}\n    />\n  );\n}\n\nexport default function RenderHTML(props: RenderHTMLProps) {\n  return (\n    <RenderHTMLDebug {...props}>\n      <RenderRegistryProvider renderers={props.renderers}>\n        <SharedPropsContext.Provider value={props}>\n          <TChildrenRenderersContext.Provider\n            value={useMemo(\n              () => ({\n                TChildrenRenderer,\n                TNodeChildrenRenderer\n              }),\n              []\n            )}>\n            <LoadHTML {...props}>\n              {(resolvedHTML) => (\n                <RenderResolvedHTML {...props} html={resolvedHTML} />\n              )}\n            </LoadHTML>\n          </TChildrenRenderersContext.Provider>\n        </SharedPropsContext.Provider>\n      </RenderRegistryProvider>\n    </RenderHTMLDebug>\n  );\n}\n\nRenderHTML.defaultProps = defaultProps;\nRenderHTML.propTypes = propTypes;\n"]}