{"version":3,"sources":["extendDefaultRenderer.ts"],"names":["extendDefaultRenderer","renderer","model","localRenderer","defaultRenderers","newRenderer","props","React","createElement","displayName","extend"],"mappings":";;;;;;;AAAA;;AAUA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,qBAAT,CACbC,QADa,EAEbC,KAFa,EAGb;AACA,QAAMC,aAAa,GACjB,OAAOF,QAAP,KAAoB,QAApB,GAA+BG,0BAAiBH,QAAjB,CAA/B,GAA4DA,QAD9D;;AAEA,QAAMI,WAA0C,GAAG,UAAUC,KAAV,EAAsB;AACvE,wBAAOC,eAAMC,aAAN,CAAoBL,aAApB,EAA0CG,KAA1C,CAAP;AACD,GAFD;;AAGAD,EAAAA,WAAW,CAACI,WAAZ,GAA0BN,aAAa,CAACM,WAAxC;AACAJ,EAAAA,WAAW,CAACH,KAAZ,GAAoBC,aAAa,CAACD,KAAd,CAAoBQ,MAApB,CAA2BR,KAA3B,CAApB;AACA,SAAOG,WAAP;AACD","sourcesContent":["import React from 'react';\nimport {\n  HTMLContentModel,\n  TagName\n} from '@native-html/transient-render-engine';\nimport {\n  CustomTagRendererFromModel,\n  DefaultTagRendererFromModel\n} from './render-types';\nimport { HTMLElementModelProperties } from '@native-html/transient-render-engine/lib/typescript/model/HTMLElementModel';\nimport defaultRenderers from './defaultRenderers';\n\n/**\n * Extend a default renderer to override its element model.\n *\n * @param Renderer - The default component to extend, or the corresponding tagName.\n * @param model - The new element model.\n */\nexport default function extendDefaultRenderer<N extends HTMLContentModel>(\n  renderer: DefaultTagRendererFromModel<any> | TagName,\n  model: Partial<HTMLElementModelProperties<any, N>>\n) {\n  const localRenderer =\n    typeof renderer === 'string' ? defaultRenderers[renderer] : renderer;\n  const newRenderer: CustomTagRendererFromModel<N> = function (props: any) {\n    return React.createElement(localRenderer as any, props);\n  } as any;\n  newRenderer.displayName = localRenderer.displayName;\n  newRenderer.model = localRenderer.model.extend(model) as any;\n  return newRenderer;\n}\n"]}