"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = RenderHTMLDebug;

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function RenderHTMLProd(props) {
  return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, props.children);
}

function RenderHTMLDev(props) {
  (0, _react.useEffect)(() => {
    if (typeof props.contentWidth !== 'number') {
      console.warn('You should always pass contentWidth prop to properly handle screen rotations ' + 'and have a seemless support for images scaling. ' + 'In the meantime, HTML will fallback to Dimensions.window().width, but its ' + 'layout will become inconsistent after screen rotations. ' + 'You are encouraged to use useWindowDimensions hook, see: ' + 'https://reactnative.dev/docs/usewindowdimensions');
    }
  }, [props.contentWidth]);
  return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, props.children);
}

function RenderHTMLDebug(props) {
  if (props.debug && __DEV__) {
    return /*#__PURE__*/_react.default.createElement(RenderHTMLDev, props);
  }

  return /*#__PURE__*/_react.default.createElement(RenderHTMLProd, props);
}
//# sourceMappingURL=RenderHTMLDebug.js.map