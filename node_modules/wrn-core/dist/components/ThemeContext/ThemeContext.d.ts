import defaultSizes from "../../themes/defaultSizes";
import getDefaultStyles from "../../themes/getDefaultStyles";
import { Colors } from "../../types/types";
import React, { ReactNode, ComponentType } from 'react';
export declare type Sizes = typeof defaultSizes;
export declare type Styled = ReturnType<typeof getDefaultStyles>;
export interface ThemeOverrides {
    colors?: Partial<Colors>;
    styled?: Partial<Styled>;
    sizes?: Partial<Sizes>;
    debug?: boolean;
}
export interface ThemeProviderProps {
    themeOverrides?: ThemeOverrides;
    children: ReactNode;
}
export declare const defaultTheme: {
    colors: {
        primary: string;
        secondary: string;
        tertiary: string;
        quaternary: string;
        success: string;
        warning: string;
        danger: string;
        info: string;
        facebook: string;
        twitter: string;
        tumblr: string;
        dribbble: string;
        youtube: string;
        vk: string;
        digg: string;
        reddit: string;
        linkedin: string;
        stumbleupon: string;
        vimeo: string;
        instagram: string;
        pinterest: string;
        behance: string;
        heart: string;
        github: string;
        dark1: string;
        dark2: string;
        dark3: string;
        dark4: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        light: string;
        transparent: string;
    };
    sizes: {
        base: number;
        font: number;
        container: number;
    };
    styled: {
        colorPrimary: {
            color: string;
        };
        colorSecondary: {
            color: string;
        };
        colorTertiary: {
            color: string;
        };
        colorQuaternary: {
            color: string;
        };
        colorInfo: {
            color: string;
        };
        colorSuccess: {
            color: string;
        };
        colorWarning: {
            color: string;
        };
        colorDanger: {
            color: string;
        };
        colorDark1: {
            color: string;
        };
        colorDark2: {
            color: string;
        };
        colorDark3: {
            color: string;
        };
        colorDark4: {
            color: string;
        };
        colorGray1: {
            color: string;
        };
        colorGray2: {
            color: string;
        };
        colorGray3: {
            color: string;
        };
        colorGray4: {
            color: string;
        };
        colorLight: {
            color: string;
        };
        bgDark1: {
            backgroundColor: string;
        };
        bgDark2: {
            backgroundColor: string;
        };
        bgDark3: {
            backgroundColor: string;
        };
        bgDark4: {
            backgroundColor: string;
        };
        bgGray1: {
            backgroundColor: string;
        };
        bgGray2: {
            backgroundColor: string;
        };
        bgGray3: {
            backgroundColor: string;
        };
        bgGray4: {
            backgroundColor: string;
        };
        bgGray5: {
            backgroundColor: string;
        };
        bgLight: {
            backgroundColor: string;
        };
        bgPrimary: {
            backgroundColor: string;
        };
        bgTransparent: {
            backgroundColor: string;
        };
        bgInfo: {
            backgroundColor: string;
        };
        bgSuccess: {
            backgroundColor: string;
        };
        bgWarning: {
            backgroundColor: string;
        };
        bgDanger: {
            backgroundColor: string;
        };
        bDark1: {
            borderColor: string;
        };
        bDark2: {
            borderColor: string;
        };
        bDark3: {
            borderColor: string;
        };
        bDark4: {
            borderColor: string;
        };
        bGray1: {
            borderColor: string;
        };
        bGray2: {
            borderColor: string;
        };
        bGray3: {
            borderColor: string;
        };
        bGray4: {
            borderColor: string;
        };
        bGray5: {
            borderColor: string;
        };
        bLight: {
            borderColor: string;
        };
        bPrimary: {
            borderColor: string;
        };
        bTransparent: {
            borderColor: string;
        };
        bInfo: {
            borderColor: string;
        };
        bSuccess: {
            borderColor: string;
        };
        bWarning: {
            borderColor: string;
        };
        bDanger: {
            borderColor: string;
        };
    };
    debug: boolean;
};
export declare type Theme = typeof defaultTheme;
export declare function ThemeProvider({ themeOverrides, children }: ThemeProviderProps): JSX.Element;
export declare const ThemeConsumer: React.Consumer<{
    colors: {
        primary: string;
        secondary: string;
        tertiary: string;
        quaternary: string;
        success: string;
        warning: string;
        danger: string;
        info: string;
        facebook: string;
        twitter: string;
        tumblr: string;
        dribbble: string;
        youtube: string;
        vk: string;
        digg: string;
        reddit: string;
        linkedin: string;
        stumbleupon: string;
        vimeo: string;
        instagram: string;
        pinterest: string;
        behance: string;
        heart: string;
        github: string;
        dark1: string;
        dark2: string;
        dark3: string;
        dark4: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        light: string;
        transparent: string;
    };
    sizes: {
        base: number;
        font: number;
        container: number;
    };
    styled: {
        colorPrimary: {
            color: string;
        };
        colorSecondary: {
            color: string;
        };
        colorTertiary: {
            color: string;
        };
        colorQuaternary: {
            color: string;
        };
        colorInfo: {
            color: string;
        };
        colorSuccess: {
            color: string;
        };
        colorWarning: {
            color: string;
        };
        colorDanger: {
            color: string;
        };
        colorDark1: {
            color: string;
        };
        colorDark2: {
            color: string;
        };
        colorDark3: {
            color: string;
        };
        colorDark4: {
            color: string;
        };
        colorGray1: {
            color: string;
        };
        colorGray2: {
            color: string;
        };
        colorGray3: {
            color: string;
        };
        colorGray4: {
            color: string;
        };
        colorLight: {
            color: string;
        };
        bgDark1: {
            backgroundColor: string;
        };
        bgDark2: {
            backgroundColor: string;
        };
        bgDark3: {
            backgroundColor: string;
        };
        bgDark4: {
            backgroundColor: string;
        };
        bgGray1: {
            backgroundColor: string;
        };
        bgGray2: {
            backgroundColor: string;
        };
        bgGray3: {
            backgroundColor: string;
        };
        bgGray4: {
            backgroundColor: string;
        };
        bgGray5: {
            backgroundColor: string;
        };
        bgLight: {
            backgroundColor: string;
        };
        bgPrimary: {
            backgroundColor: string;
        };
        bgTransparent: {
            backgroundColor: string;
        };
        bgInfo: {
            backgroundColor: string;
        };
        bgSuccess: {
            backgroundColor: string;
        };
        bgWarning: {
            backgroundColor: string;
        };
        bgDanger: {
            backgroundColor: string;
        };
        bDark1: {
            borderColor: string;
        };
        bDark2: {
            borderColor: string;
        };
        bDark3: {
            borderColor: string;
        };
        bDark4: {
            borderColor: string;
        };
        bGray1: {
            borderColor: string;
        };
        bGray2: {
            borderColor: string;
        };
        bGray3: {
            borderColor: string;
        };
        bGray4: {
            borderColor: string;
        };
        bGray5: {
            borderColor: string;
        };
        bLight: {
            borderColor: string;
        };
        bPrimary: {
            borderColor: string;
        };
        bTransparent: {
            borderColor: string;
        };
        bInfo: {
            borderColor: string;
        };
        bSuccess: {
            borderColor: string;
        };
        bWarning: {
            borderColor: string;
        };
        bDanger: {
            borderColor: string;
        };
    };
    debug: boolean;
}>;
export declare function useTheme(): {
    colors: {
        primary: string;
        secondary: string;
        tertiary: string;
        quaternary: string;
        success: string;
        warning: string;
        danger: string;
        info: string;
        facebook: string;
        twitter: string;
        tumblr: string;
        dribbble: string;
        youtube: string;
        vk: string;
        digg: string;
        reddit: string;
        linkedin: string;
        stumbleupon: string;
        vimeo: string;
        instagram: string;
        pinterest: string;
        behance: string;
        heart: string;
        github: string;
        dark1: string;
        dark2: string;
        dark3: string;
        dark4: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        light: string;
        transparent: string;
    };
    sizes: {
        base: number;
        font: number;
        container: number;
    };
    styled: {
        colorPrimary: {
            color: string;
        };
        colorSecondary: {
            color: string;
        };
        colorTertiary: {
            color: string;
        };
        colorQuaternary: {
            color: string;
        };
        colorInfo: {
            color: string;
        };
        colorSuccess: {
            color: string;
        };
        colorWarning: {
            color: string;
        };
        colorDanger: {
            color: string;
        };
        colorDark1: {
            color: string;
        };
        colorDark2: {
            color: string;
        };
        colorDark3: {
            color: string;
        };
        colorDark4: {
            color: string;
        };
        colorGray1: {
            color: string;
        };
        colorGray2: {
            color: string;
        };
        colorGray3: {
            color: string;
        };
        colorGray4: {
            color: string;
        };
        colorLight: {
            color: string;
        };
        bgDark1: {
            backgroundColor: string;
        };
        bgDark2: {
            backgroundColor: string;
        };
        bgDark3: {
            backgroundColor: string;
        };
        bgDark4: {
            backgroundColor: string;
        };
        bgGray1: {
            backgroundColor: string;
        };
        bgGray2: {
            backgroundColor: string;
        };
        bgGray3: {
            backgroundColor: string;
        };
        bgGray4: {
            backgroundColor: string;
        };
        bgGray5: {
            backgroundColor: string;
        };
        bgLight: {
            backgroundColor: string;
        };
        bgPrimary: {
            backgroundColor: string;
        };
        bgTransparent: {
            backgroundColor: string;
        };
        bgInfo: {
            backgroundColor: string;
        };
        bgSuccess: {
            backgroundColor: string;
        };
        bgWarning: {
            backgroundColor: string;
        };
        bgDanger: {
            backgroundColor: string;
        };
        bDark1: {
            borderColor: string;
        };
        bDark2: {
            borderColor: string;
        };
        bDark3: {
            borderColor: string;
        };
        bDark4: {
            borderColor: string;
        };
        bGray1: {
            borderColor: string;
        };
        bGray2: {
            borderColor: string;
        };
        bGray3: {
            borderColor: string;
        };
        bGray4: {
            borderColor: string;
        };
        bGray5: {
            borderColor: string;
        };
        bLight: {
            borderColor: string;
        };
        bPrimary: {
            borderColor: string;
        };
        bTransparent: {
            borderColor: string;
        };
        bInfo: {
            borderColor: string;
        };
        bSuccess: {
            borderColor: string;
        };
        bWarning: {
            borderColor: string;
        };
        bDanger: {
            borderColor: string;
        };
    };
    debug: boolean;
};
export declare function withTheme<P extends Record<string, any>>(Component: ComponentType<P>): React.FC<P>;
